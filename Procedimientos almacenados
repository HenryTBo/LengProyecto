-- FIDE_PRODUCTOS_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_INSERTAR_SP (
    P_PRODUCTO_ID_PRODUCTO_PK IN NUMBER,
    P_CATEGORIA_ID_CATEGORIA_FK IN NUMBER,
    P_PRESENTACIONES_ID_PRESENTACION_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2,
    P_PRECIO_UNITARIO IN NUMBER
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_PRODUCTOS_TB (
        PRODUCTO_ID_PRODUCTO_PK, CATEGORIA_ID_CATEGORIA_FK, PRESENTACIONES_ID_PRESENTACION_FK,
        ESTADOS_ID_ESTADO_FK, NOMBRE, DESCRIPCION, PRECIO_UNITARIO
    ) VALUES (
        P_PRODUCTO_ID_PRODUCTO_PK, P_CATEGORIA_ID_CATEGORIA_FK, P_PRESENTACIONES_ID_PRESENTACION_FK,
        P_ESTADOS_ID_ESTADO_FK, P_NOMBRE, P_DESCRIPCION, P_PRECIO_UNITARIO
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_MODIFICAR_SP (
    P_PRODUCTO_ID_PRODUCTO_PK IN NUMBER,
    P_CATEGORIA_ID_CATEGORIA_FK IN NUMBER,
    P_PRESENTACIONES_ID_PRESENTACION_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2,
    P_PRECIO_UNITARIO IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_PRODUCTOS_TB
    SET CATEGORIA_ID_CATEGORIA_FK = P_CATEGORIA_ID_CATEGORIA_FK,
        PRESENTACIONES_ID_PRESENTACION_FK = P_PRESENTACIONES_ID_PRESENTACION_FK,
        ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK,
        NOMBRE = P_NOMBRE,
        DESCRIPCION = P_DESCRIPCION,
        PRECIO_UNITARIO = P_PRECIO_UNITARIO
    WHERE PRODUCTO_ID_PRODUCTO_PK = P_PRODUCTO_ID_PRODUCTO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_PRODUCTOS_ELIMINAR_SP (
    P_PRODUCTO_ID_PRODUCTO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_PRODUCTOS_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE PRODUCTO_ID_PRODUCTO_PK = P_PRODUCTO_ID_PRODUCTO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_CARRITO_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_CARRITO_INSERTAR_SP (
    P_CARRITO_ID_CARRITO_PK IN NUMBER,
    P_USUARIOS_ID_USUARIO_FK IN NUMBER,
    P_PRODUCTOS_ID_PRODUCTO_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_CANTIDAD IN NUMBER,
    P_FECHA_AGREGADO IN DATE
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_CARRITO_TB (
        CARRITO_ID_CARRITO_PK, USUARIOS_ID_USUARIO_FK, PRODUCTOS_ID_PRODUCTO_FK,
        ESTADOS_ID_ESTADO_FK, CANTIDAD, FECHA_AGREGADO
    ) VALUES (
        P_CARRITO_ID_CARRITO_PK, P_USUARIOS_ID_USUARIO_FK, P_PRODUCTOS_ID_PRODUCTO_FK,
        P_ESTADOS_ID_ESTADO_FK, P_CANTIDAD, P_FECHA_AGREGADO
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_CARRITO_MODIFICAR_SP (
    P_CARRITO_ID_CARRITO_PK IN NUMBER,
    P_CANTIDAD IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_CARRITO_TB
    SET CANTIDAD = P_CANTIDAD
    WHERE CARRITO_ID_CARRITO_PK = P_CARRITO_ID_CARRITO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_CARRITO_ELIMINAR_SP (
    P_CARRITO_ID_CARRITO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_CARRITO_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE CARRITO_ID_CARRITO_PK = P_CARRITO_ID_CARRITO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_PEDIDOS_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_PEDIDOS_INSERTAR_SP (
    P_PEDIDOS_ID_PEDIDO_PK IN NUMBER,
    P_USUARIOS_ID_USUARIO_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_FECHA_PEDIDO IN DATE,
    P_TOTAL IN NUMBER
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_PEDIDOS_TB (
        PEDIDOS_ID_PEDIDO_PK, USUARIOS_ID_USUARIO_FK, ESTADOS_ID_ESTADO_FK,
        FECHA_PEDIDO, TOTAL
    ) VALUES (
        P_PEDIDOS_ID_PEDIDO_PK, P_USUARIOS_ID_USUARIO_FK, P_ESTADOS_ID_ESTADO_FK,
        P_FECHA_PEDIDO, P_TOTAL
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_PEDIDOS_MODIFICAR_SP (
    P_PEDIDOS_ID_PEDIDO_PK IN NUMBER,
    P_TOTAL IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_PEDIDOS_TB
    SET TOTAL = P_TOTAL
    WHERE PEDIDOS_ID_PEDIDO_PK = P_PEDIDOS_ID_PEDIDO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_PEDIDOS_ELIMINAR_SP (
    P_PEDIDOS_ID_PEDIDO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_PEDIDOS_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE PEDIDOS_ID_PEDIDO_PK = P_PEDIDOS_ID_PEDIDO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_DETALLE_PEDIDO_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_DETALLE_PEDIDO_INSERTAR_SP (
    P_DETALLE_PEDIDO_ID_DETALLE_PK IN NUMBER,
    P_PEDIDOS_ID_PEDIDO_FK IN NUMBER,
    P_PRODUCTOS_ID_PRODUCTO_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_CANTIDAD IN NUMBER,
    P_PRECIO_UNITARIO IN NUMBER
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_DETALLE_PEDIDO_TB (
        DETALLE_PEDIDO_ID_DETALLE_PK, PEDIDOS_ID_PEDIDO_FK,
        PRODUCTOS_ID_PRODUCTO_FK, ESTADOS_ID_ESTADO_FK,
        CANTIDAD, PRECIO_UNITARIO
    ) VALUES (
        P_DETALLE_PEDIDO_ID_DETALLE_PK, P_PEDIDOS_ID_PEDIDO_FK,
        P_PRODUCTOS_ID_PRODUCTO_FK, P_ESTADOS_ID_ESTADO_FK,
        P_CANTIDAD, P_PRECIO_UNITARIO
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_DETALLE_PEDIDO_MODIFICAR_SP (
    P_DETALLE_PEDIDO_ID_DETALLE_PK IN NUMBER,
    P_CANTIDAD IN NUMBER,
    P_PRECIO_UNITARIO IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_DETALLE_PEDIDO_TB
    SET CANTIDAD = P_CANTIDAD,
        PRECIO_UNITARIO = P_PRECIO_UNITARIO
    WHERE DETALLE_PEDIDO_ID_DETALLE_PK = P_DETALLE_PEDIDO_ID_DETALLE_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_DETALLE_PEDIDO_ELIMINAR_SP (
    P_DETALLE_PEDIDO_ID_DETALLE_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_DETALLE_PEDIDO_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE DETALLE_PEDIDO_ID_DETALLE_PK = P_DETALLE_PEDIDO_ID_DETALLE_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_FACTURACION_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_FACTURACION_INSERTAR_SP (
    P_FACTURACION_ID_FACTURA_PK IN NUMBER,
    P_PEDIDOS_ID_PEDIDO_FK IN NUMBER,
    P_METODOS_PAGO_ID_PAGO_FK IN NUMBER,
    P_FECHA_EMISION IN DATE,
    P_DESCUENTOS IN NUMBER,
    P_SUBTOTAL IN NUMBER,
    P_IVA IN NUMBER,
    P_TOTAL_FACTURADO IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_FACTURACION_TB (
        FACTURACION_ID_FACTURA_PK, PEDIDOS_ID_PEDIDO_FK, METODOS_PAGO_ID_PAGO_FK,
        FECHA_EMISION, DESCUENTOS, SUBTOTAL, IVA, TOTAL_FACTURADO,
        ESTADOS_ID_ESTADO_FK
    ) VALUES (
        P_FACTURACION_ID_FACTURA_PK, P_PEDIDOS_ID_PEDIDO_FK, P_METODOS_PAGO_ID_PAGO_FK,
        P_FECHA_EMISION, P_DESCUENTOS, P_SUBTOTAL, P_IVA, P_TOTAL_FACTURADO,
        P_ESTADOS_ID_ESTADO_FK
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_FACTURACION_MODIFICAR_SP (
    P_FACTURACION_ID_FACTURA_PK IN NUMBER,
    P_DESCUENTOS IN NUMBER,
    P_SUBTOTAL IN NUMBER,
    P_IVA IN NUMBER,
    P_TOTAL_FACTURADO IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_FACTURACION_TB
    SET DESCUENTOS = P_DESCUENTOS,
        SUBTOTAL = P_SUBTOTAL,
        IVA = P_IVA,
        TOTAL_FACTURADO = P_TOTAL_FACTURADO
    WHERE FACTURACION_ID_FACTURA_PK = P_FACTURACION_ID_FACTURA_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_FACTURACION_ELIMINAR_SP (
    P_FACTURACION_ID_FACTURA_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_FACTURACION_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE FACTURACION_ID_FACTURA_PK = P_FACTURACION_ID_FACTURA_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_INVENTARIO_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_INVENTARIO_INSERTAR_SP (
    P_INVENTARIO_ID_MOVIMIENTO_PK IN NUMBER,
    P_PRODUCTOS_ID_PRODUCTO_FK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_ALMACENADO_ID_ALMACENADO_FK IN NUMBER,
    P_CANTIDAD_STOCK IN NUMBER,
    P_FECHA_INGRESO IN DATE,
    P_OBSERVACIONES IN VARCHAR2
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_INVENTARIO_TB (
        INVENTARIO_ID_MOVIMIENTO_PK, PRODUCTOS_ID_PRODUCTO_FK, ESTADOS_ID_ESTADO_FK,
        ALMACENADO_ID_ALMACENADO_FK, CANTIDAD_STOCK, FECHA_INGRESO, OBSERVACIONES
    ) VALUES (
        P_INVENTARIO_ID_MOVIMIENTO_PK, P_PRODUCTOS_ID_PRODUCTO_FK, P_ESTADOS_ID_ESTADO_FK,
        P_ALMACENADO_ID_ALMACENADO_FK, P_CANTIDAD_STOCK, P_FECHA_INGRESO, P_OBSERVACIONES
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_INVENTARIO_MODIFICAR_SP (
    P_INVENTARIO_ID_MOVIMIENTO_PK IN NUMBER,
    P_CANTIDAD_STOCK IN NUMBER,
    P_OBSERVACIONES IN VARCHAR2
) IS
BEGIN
    UPDATE TAREA1.FIDE_INVENTARIO_TB
    SET CANTIDAD_STOCK = P_CANTIDAD_STOCK,
        OBSERVACIONES = P_OBSERVACIONES
    WHERE INVENTARIO_ID_MOVIMIENTO_PK = P_INVENTARIO_ID_MOVIMIENTO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_INVENTARIO_ELIMINAR_SP (
    P_INVENTARIO_ID_MOVIMIENTO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_INVENTARIO_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE INVENTARIO_ID_MOVIMIENTO_PK = P_INVENTARIO_ID_MOVIMIENTO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_ALMACENADO_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_ALMACENADO_INSERTAR_SP (
    P_ALMACENADO_ID_ALMACENADO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_DESCRIPCION_ALMACENADO IN VARCHAR2
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_ALMACENADO_TB (
        ALMACENADO_ID_ALMACENADO_PK, ESTADOS_ID_ESTADO_FK, DESCRIPCION_ALMACENADO
    ) VALUES (
        P_ALMACENADO_ID_ALMACENADO_PK, P_ESTADOS_ID_ESTADO_FK, P_DESCRIPCION_ALMACENADO
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_ALMACENADO_MODIFICAR_SP (
    P_ALMACENADO_ID_ALMACENADO_PK IN NUMBER,
    P_DESCRIPCION_ALMACENADO IN VARCHAR2
) IS
BEGIN
    UPDATE TAREA1.FIDE_ALMACENADO_TB
    SET DESCRIPCION_ALMACENADO = P_DESCRIPCION_ALMACENADO
    WHERE ALMACENADO_ID_ALMACENADO_PK = P_ALMACENADO_ID_ALMACENADO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_ALMACENADO_ELIMINAR_SP (
    P_ALMACENADO_ID_ALMACENADO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_ALMACENADO_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE ALMACENADO_ID_ALMACENADO_PK = P_ALMACENADO_ID_ALMACENADO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_PRESENTACIONES_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_PRESENTACIONES_INSERTAR_SP (
    P_PRESENTACIONES_ID_PRESENTACION_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_TIPO_PRESENTACION IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_PRESENTACIONES_TB (
        PRESENTACIONES_ID_PRESENTACION_PK, ESTADOS_ID_ESTADO_FK,
        TIPO_PRESENTACION, DESCRIPCION
    ) VALUES (
        P_PRESENTACIONES_ID_PRESENTACION_PK, P_ESTADOS_ID_ESTADO_FK,
        P_TIPO_PRESENTACION, P_DESCRIPCION
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_PRESENTACIONES_MODIFICAR_SP (
    P_PRESENTACIONES_ID_PRESENTACION_PK IN NUMBER,
    P_TIPO_PRESENTACION IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    UPDATE TAREA1.FIDE_PRESENTACIONES_TB
    SET TIPO_PRESENTACION = P_TIPO_PRESENTACION,
        DESCRIPCION = P_DESCRIPCION
    WHERE PRESENTACIONES_ID_PRESENTACION_PK = P_PRESENTACIONES_ID_PRESENTACION_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_PRESENTACIONES_ELIMINAR_SP (
    P_PRESENTACIONES_ID_PRESENTACION_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_PRESENTACIONES_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE PRESENTACIONES_ID_PRESENTACION_PK = P_PRESENTACIONES_ID_PRESENTACION_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_CATEGORIA_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_INSERTAR_SP (
    P_CATEGORIA_ID_CATEGORIA_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_NOMBRE_CATEGORIA IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_CATEGORIA_TB (
        CATEGORIA_ID_CATEGORIA_PK, ESTADOS_ID_ESTADO_FK,
        NOMBRE_CATEGORIA, DESCRIPCION
    ) VALUES (
        P_CATEGORIA_ID_CATEGORIA_PK, P_ESTADOS_ID_ESTADO_FK,
        P_NOMBRE_CATEGORIA, P_DESCRIPCION
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_MODIFICAR_SP (
    P_CATEGORIA_ID_CATEGORIA_PK IN NUMBER,
    P_NOMBRE_CATEGORIA IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    UPDATE TAREA1.FIDE_CATEGORIA_TB
    SET NOMBRE_CATEGORIA = P_NOMBRE_CATEGORIA,
        DESCRIPCION = P_DESCRIPCION
    WHERE CATEGORIA_ID_CATEGORIA_PK = P_CATEGORIA_ID_CATEGORIA_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_CATEGORIA_ELIMINAR_SP (
    P_CATEGORIA_ID_CATEGORIA_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_CATEGORIA_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE CATEGORIA_ID_CATEGORIA_PK = P_CATEGORIA_ID_CATEGORIA_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
-- FIDE_METODOS_PAGO_TB
-- Inserción
CREATE OR REPLACE PROCEDURE FIDE_METODOS_PAGO_INSERTAR_SP (
    P_METODOS_PAGO_ID_PAGO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER,
    P_NOMBRE_METODO IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    INSERT INTO TAREA1.FIDE_METODOS_PAGO_TB (
        METODOS_PAGO_ID_PAGO_PK, ESTADOS_ID_ESTADO_FK,
        NOMBRE_METODO, DESCRIPCION
    ) VALUES (
        P_METODOS_PAGO_ID_PAGO_PK, P_ESTADOS_ID_ESTADO_FK,
        P_NOMBRE_METODO, P_DESCRIPCION
    );
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Modificación
CREATE OR REPLACE PROCEDURE FIDE_METODOS_PAGO_MODIFICAR_SP (
    P_METODOS_PAGO_ID_PAGO_PK IN NUMBER,
    P_NOMBRE_METODO IN VARCHAR2,
    P_DESCRIPCION IN VARCHAR2
) IS
BEGIN
    UPDATE TAREA1.FIDE_METODOS_PAGO_TB
    SET NOMBRE_METODO = P_NOMBRE_METODO,
        DESCRIPCION = P_DESCRIPCION
    WHERE METODOS_PAGO_ID_PAGO_PK = P_METODOS_PAGO_ID_PAGO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/

-- Eliminación lógica
CREATE OR REPLACE PROCEDURE FIDE_METODOS_PAGO_ELIMINAR_SP (
    P_METODOS_PAGO_ID_PAGO_PK IN NUMBER,
    P_ESTADOS_ID_ESTADO_FK IN NUMBER
) IS
BEGIN
    UPDATE TAREA1.FIDE_METODOS_PAGO_TB
    SET ESTADOS_ID_ESTADO_FK = P_ESTADOS_ID_ESTADO_FK
    WHERE METODOS_PAGO_ID_PAGO_PK = P_METODOS_PAGO_ID_PAGO_PK;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;
/
